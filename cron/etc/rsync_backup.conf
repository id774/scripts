# rsync_backup.conf
#
# This configuration file defines operational scenarios for the rsync_backup.sh script.
# Each operation function below encapsulates a full backup or synchronization routine.
# Modify or extend the operations as needed for different source/target disk combinations.
# Common backup-related path variables are defined in set_variables().
# All variables must be defined after base paths (e.g., B_HOME) are initialized.

# To add additional backup patterns or devices, define a new operationN() function,
# set the corresponding B/T_HOME, MOUNT, and DEVICE values, and call set_variables if needed.
# Then extend the `operation()` dispatcher logic accordingly.

# Set shared path variables used by github_backup and git_backup
set_variables() {
  # Local directory to store temporary archive files
  ARCHIVE_DIR="/root/local"

  # Archive file name for local Git repository backup
  ARCHIVE_NAME_GIT="git.tar.gz"

  # Archive file name for local GitHub repository backup
  ARCHIVE_NAME_GITHUB="github.tar.gz"

  # Remote Git repository location on the source host (accessed via rsync over SSH)
  REMOTE_GIT_DIR="/mnt/sdc/home/git"

  # Local directory containing the GitHub repository to be archived
  GITHUB_SRC="$B_HOME/local/github"

  # Destination directory on the backup disk where Git/GitHub archives will be stored
  DEST_GIT_ARCHIVE="$B_HOME/$B_MOUNT/$B_DEVICE/user2/arc/git"
}

# Primary operation: full sync and backup between local disks
operation1() {
  # Base directory for backup source
  B_HOME=/home/ubuntu

  # Base directory for backup target
  T_HOME=/home/ubuntu

  # Mount points and device names
  B_MOUNT=mnt
  B_DEVICE=sdb
  T_MOUNT=mnt
  T_DEVICE=sde

  # Load shared path variables (must be after B_HOME/B_MOUNT/B_DEVICE are set)
  set_variables

  version_info
  df -T

  smart_info
  print_serial_number
  display_and_update_timestamp

  show_capacity_of_directories
  cleanup
  github_backup
  git_backup git git.id774.net

  rsync_disk2disk_1
  rsync_disk2disk_2

  df -T
  smart_check
}

# Secondary operation: partial sync with alternate target device
operation2() {
  B_HOME=/home/ubuntu
  T_HOME=/home/ubuntu
  B_MOUNT=mnt
  B_DEVICE=sdb
  T_MOUNT=mnt
  T_DEVICE=sdf

  version_info
  df -T

  print_serial_number
  display_and_update_timestamp

  rsync_disk2disk_1
  rsync_disk2disk_2

  df -T
}

# Entry point dispatcher:
# This selects which operation to run based on the presence of a timestamp file
# on the respective target device mount point. You can control which disk is
# selected by ensuring that the timestamp file exists or not.
operation() {
  T_HOME=/home/ubuntu
  T_MOUNT=mnt

  T_DEVICE=sde
  test -f "$T_HOME/$T_MOUNT/$T_DEVICE/timestamp" && operation1

  T_DEVICE=sdf
  test -f "$T_HOME/$T_MOUNT/$T_DEVICE/timestamp" && operation2
}

# Trigger main operation dispatcher
operation
