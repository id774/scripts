#!/bin/sh

########################################################################
# apache_log_analysis: Apache Log Summary and IP Hit Analysis Script
#
#  Description:
#  This script performs Apache log summarization and IP hit analysis.
#  It is intended to be executed automatically by cron and uses helper
#  scripts to process access logs and extract useful patterns.
#
#  Author: id774 (More info: http://id774.net)
#  Source Code: https://github.com/id774/scripts
#  License: The GPL version 3, or LGPL version 3 (Dual License).
#  Contact: idnanashi@gmail.com
#
#  Usage:
#      ./apache_log_analysis
#  This script is intended to be executed periodically by cron.
#
#  Cron Usage:
#      Place this script into /etc/cron.daily or similar.
#      Or create a specific cron entry like the following:
#      45 3 * * * root /path/to/apache_log_analysis
#
#  Version History:
#  v1.3 2025-07-30
#       Update documentation to reflect move from /etc/cron.daily to /etc/cron.exec.
#  v1.2 2025-06-23
#       Unified usage output to display full script header and support common help/version options.
#  v1.1 2025-05-16
#       Add return 0 to main and exit $? at script end for consistent exit status.
#  v1.0 2025-05-10
#       Refactor into POSIX-compliant, function-based structure with cron validation.
#  v0.1 2022-10-11
#       Initial release. Summary and IP hit analysis of Apache logs.
#
########################################################################

# Display full script header information extracted from the top comment block
usage() {
    awk '
        BEGIN { in_header = 0 }
        /^#{10,}$/ { if (!in_header) { in_header = 1; next } else exit }
        in_header && /^# ?/ { print substr($0, 3) }
    ' "$0"
    exit 0
}

# Check if the script is running from cron
is_running_from_cron() {
    if tty -s; then
        return 1  # Terminal attached (interactive session)
    else
        return 0  # No terminal (likely cron)
    fi
}

# Check if JOBLOG is writable
is_joblog_writable() {
    if [ ! -w "$JOBLOG" ] && ! touch "$JOBLOG" 2>/dev/null; then
        echo "[ERROR] JOBLOG is not writable: $JOBLOG" >&2
        exit 1
    fi
}

# Setup variables and log start time
initialize() {
    JOBLOG="/var/log/sysadmin/apache_summary.log"
    SCRIPT1="/etc/cron.exec/apache_log_analysis.sh"
    SCRIPT2="/etc/cron.exec/apache_calculater.py"
    ACCESS_LOG="/var/log/apache2/ssl_access.log"
    ACCESS_LOG_ROTATED="/var/log/apache2/ssl_access.log.1"

    if ! is_running_from_cron; then
        echo "[ERROR] This script is intended to be run by cron only." >&2
        exit 1
    fi

    is_joblog_writable

    echo -n "*** $0: Job started on $(hostname) at " >> "$JOBLOG" 2>&1
    date "+%Y/%m/%d %T" >> "$JOBLOG" 2>&1
}

# Call helper scripts to analyze logs
call_main_scripts() {
    if [ -x "$SCRIPT1" ]; then
        echo "[INFO] Executing: $SCRIPT1 on $ACCESS_LOG" >> "$JOBLOG" 2>&1
        "$SCRIPT1" "$ACCESS_LOG" >> "$JOBLOG" 2>&1
    else
        echo "[WARN] Log summary script not found: $SCRIPT1" >> "$JOBLOG" 2>&1
    fi

    if [ -x "$SCRIPT2" ]; then
        echo "[INFO] Executing: $SCRIPT2 on $ACCESS_LOG_ROTATED" >> "$JOBLOG" 2>&1
        echo "[Recent IP Hits]" >> "$JOBLOG" 2>&1
        "$SCRIPT2" "$ACCESS_LOG_ROTATED" >> "$JOBLOG" 2>&1
    else
        echo "[WARN] IP analysis script not found: $SCRIPT2" >> "$JOBLOG" 2>&1
    fi
}

# Finalize and log job completion
finalize() {
    echo -n "*** $0: Job ended on $(hostname) at " >> "$JOBLOG" 2>&1
    date "+%Y/%m/%d %T" >> "$JOBLOG" 2>&1
    echo >> "$JOBLOG" 2>&1
}

# Main entry point of the script
main() {
    case "$1" in
        -h|--help|-v|--version) usage ;;
    esac

    initialize
    call_main_scripts
    finalize

    return 0
}

# Execute main function
main "$@"
